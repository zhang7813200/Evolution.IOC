<?xml version="1.0" encoding="utf-8" ?>
<Evolution>
  <IOC>
    <Services>
      <Service InterfaceType="Evolution.IOC.UnitTest.IMyService" ImplementClassType="Evolution.IOC.UnitTest.MyService_Constructor" LifeTime="2" InjectionWay="1" />
      <Service InterfaceType="Evolution.IOC.UnitTest.IMySingleTonService" ImplementClassType="Evolution.IOC.UnitTest.MySingleTonService" LifeTime="4" InjectionWay="1" />
    </Services>
  </IOC>
</Evolution>


<!--InjectionWay InjectionWay { get; set; }
LifeTime LifeTime { get; set; }
Type ImplementClassType { get; set; }
Type InterfaceType { get; set; }
object[] ParameterValues { get; set; }-->

<!--
LifeTime
None = 0,
[Description("每次都创建对象")]
Transient = 1,
[Description("线程级别共享对象")]
Scoped = 2,
[Description("进程级别共享对象")]
Singleton = 4-->

<!--
InjectionWay
[Description("默认构造器注入")]
None = 0,
[Description("构造器注入")]
Constructor = 1,
[Description("方法注入")]
Method = 2,
[Description("属性注入")]
Property = 4,
[Description("智能注入:使用此框架者如果不会使用特性标识注入模式, 此枚举会按照 构造器→方法→属性顺序，依次查找需要被注入的接口")]
Smart = 8,
[Description("兼容所有注入模式")]
All = 99999,-->